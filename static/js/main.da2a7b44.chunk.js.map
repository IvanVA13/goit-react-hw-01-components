{"version":3,"sources":["Statistics/Statistics.module.scss","Transaction-history/Transaction-history.module.scss","img/default.jpg","User/Profile.js","Statistics/styles.js","Statistics/Statistics.js","Friend-list/Friend-list.js","Transaction-history/Transaction-history.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","src","alt","defaultProps","defaultImg","styles","widthItem","length","bgcolorGen","Math","trunc","random","Statistics","title","statistics","map","id","label","percentage","item","style","width","inlineStyles","height","backgroundColor","List","styled","ul","Item","li","Status","span","props","color","Avatar","img","Name","p","FriendList","friends","isOnline","TransactionHistory","items","type","amount","currency","App","User","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da2a7b44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2wcWx\",\"title\":\"Statistics_title__3wsTP\",\"stat-list\":\"Statistics_stat-list__3wnRl\",\"item\":\"Statistics_item__cOQOB\",\"label\":\"Statistics_label__1pbnx\",\"percentage\":\"Statistics_percentage__2xMqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"Transaction-history_transaction-history__1zn0j\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import './Profile.scss';\nimport React from 'react';\nimport defaultImg from '../img/default.jpg';\nimport PropTypes from 'prop-types';\n\nexport const Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => (\n  <div className=\"profile\">\n    <div className=\"description\">\n      <img src={avatar} alt={name} className=\"avatar\" />\n      <p className=\"name\">{name}</p>\n      <p className=\"tag\">@{tag}</p>\n      <p className=\"location\">{location}</p>\n    </div>\n    <ul className=\"stats\">\n      <li>\n        <span className=\"label\">Followers</span>\n        <span className=\"quantity\">{followers}</span>\n      </li>\n      <li>\n        <span className=\"label\">Views</span>\n        <span className=\"quantity\">{views}</span>\n      </li>\n      <li>\n        <span className=\"label\">Likes</span>\n        <span className=\"quantity\">{likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  avatar: defaultImg,\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\n};\n","const styles = {\n  widthItem: stats => 270 / stats.length,\n  bgcolorGen: () => {\n    return `rgb(${Math.trunc(240 * Math.random())},${Math.trunc(\n      240 * Math.random(),\n    )},${Math.trunc(240 * Math.random())})`;\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.scss';\nimport inlineStyles from './styles';\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {styles.title ? <h2 className={styles.title}>{title}</h2> : ''}\n      <ul className={styles['stat-list']}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={styles.item}\n            key={id}\n            style={{\n              width: inlineStyles.widthItem(stats),\n              height: inlineStyles.widthItem(stats),\n              backgroundColor: inlineStyles.bgcolorGen(),\n            }}\n          >\n            <span className={styles.label}>{label}</span>\n            <span className={styles.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import styled from 'styled-components';\n\nimport React from 'react';\nimport defaultImg from '../img/default.jpg';\nimport PropTypes from 'prop-types';\n\n// styles\nconst List = styled.ul`\n  list-style: none;\n  margin: 0 auto;\n  padding: 0;\n  width: 270px;\n`;\nconst Item = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 10px;\n\n  text-align: center;\n\n  border: 1px solid rgb(181, 181, 181);\n  box-shadow: 7px 7px 19px -4px rgba(0, 0, 0, 0.53);\n`;\nconst Status = styled.span`\n  width: 15px;\n  height: 15px;\n\n  background-color: ${props => props.color};\n  border-radius: 50%;\n`;\nconst Avatar = styled.img`\n  margin: 0 10px;\n  width: 70px;\n  height: 70px;\n\n  border: 1px solid rgb(181, 181, 181);\n  border-radius: 4px;\n`;\nconst Name = styled.p``;\n\nexport const FriendList = ({ friends }) => (\n  <List>\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <Item key={id}>\n        <Status color={isOnline ? 'green' : 'red'} />\n        <Avatar src={avatar} alt={name} width=\"48\" />\n        <Name>{name}</Name>\n      </Item>\n    ))}\n  </List>\n);\n\nFriendList.defaultProps = {\n  avatar: defaultImg,\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import styles from './Transaction-history.module.scss';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TransactionHistory = ({ items }) => (\r\n  <table className={styles['transaction-history']}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import React from 'react';\r\nimport { Profile } from './User';\r\nimport { Statistics } from './Statistics';\r\nimport { FriendList } from './Friend-list';\r\nimport { TransactionHistory } from './Transaction-history';\r\n\r\nimport User from './data/user.json';\r\nimport statisticalData from './data/statistical-data.json';\r\nimport friends from './data/friends.json';\r\nimport transactions from './data/transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={User.name}\r\n        tag={User.tag}\r\n        location={User.location}\r\n        avatar={User.avatar}\r\n        stats={User.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}