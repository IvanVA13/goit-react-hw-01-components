{"version":3,"sources":["Statistics/Statistics.module.scss","Transaction-history/Transaction-history.module.scss","img/default.jpg","User/Profile.js","Statistics/Statistics.js","Friend-list/Friend-list.js","Transaction-history/Transaction-history.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","src","alt","defaultProps","defaultImg","Statistics","title","widthItem","length","styles","statistics","map","id","label","percentage","item","style","width","height","backgroundColor","Math","trunc","random","List","styled","ul","Item","li","Status","span","props","color","Avatar","img","Name","p","FriendList","friends","isOnline","TransactionHistory","items","type","amount","currency","App","User","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94811237.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2wcWx\",\"title\":\"Statistics_title__3wsTP\",\"stat-list\":\"Statistics_stat-list__3wnRl\",\"item\":\"Statistics_item__cOQOB\",\"label\":\"Statistics_label__1pbnx\",\"percentage\":\"Statistics_percentage__2xMqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"Transaction-history_transaction-history__1zn0j\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import './Profile.scss';\r\nimport React from 'react';\r\nimport defaultImg from '../img/default.jpg';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Profile = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  stats: { followers, views, likes },\r\n}) => (\r\n  <div className=\"profile\">\r\n    <div className=\"description\">\r\n      <img src={avatar} alt={name} className=\"avatar\" />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n    <ul className=\"stats\">\r\n      <li>\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{views}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultImg,\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n","import styles from './Statistics.module.scss';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n  const widthItem = 270 / stats.length;\r\n  const bgcolorGen = function () {\r\n    return `rgb(${Math.trunc(240 * Math.random())},${Math.trunc(\r\n      240 * Math.random(),\r\n    )},${Math.trunc(240 * Math.random())})`;\r\n  };\r\n  return (\r\n    <section className={styles.statistics}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      <ul className={styles['stat-list']}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li\r\n            className={styles.item}\r\n            key={id}\r\n            style={{\r\n              width: widthItem,\r\n              height: widthItem,\r\n              backgroundColor: bgcolorGen(),\r\n            }}\r\n          >\r\n            <span className={styles.label}>{label}</span>\r\n            <span className={styles.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport React from 'react';\r\nimport defaultImg from '../img/default.jpg';\r\nimport PropTypes from 'prop-types';\r\n\r\n// styles\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 270px;\r\n`;\r\nconst Item = styled.li`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n\r\n  text-align: center;\r\n\r\n  border: 1px solid rgb(181, 181, 181);\r\n  box-shadow: 7px 7px 19px -4px rgba(0, 0, 0, 0.53);\r\n`;\r\nconst Status = styled.span`\r\n  width: 15px;\r\n  height: 15px;\r\n\r\n  background-color: ${props => props.color};\r\n  border-radius: 50%;\r\n`;\r\nconst Avatar = styled.img`\r\n  margin: 0 10px;\r\n  width: 70px;\r\n  height: 70px;\r\n\r\n  border: 1px solid rgb(181, 181, 181);\r\n  border-radius: 4px;\r\n`;\r\nconst Name = styled.p``;\r\n\r\nexport const FriendList = ({ friends }) => (\r\n  <List>\r\n    {friends.map(({ avatar, name, isOnline, id }) => (\r\n      <Item key={id}>\r\n        <Status color={isOnline ? 'green' : 'red'} />\r\n        <Avatar src={avatar} alt={name} width=\"48\" />\r\n        <Name>{name}</Name>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nFriendList.defaultProps = {\r\n  avatar: defaultImg,\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import styles from './Transaction-history.module.scss';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TransactionHistory = ({ items }) => (\r\n  <table className={styles['transaction-history']}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import React from 'react';\r\nimport { Profile } from './User';\r\nimport { Statistics } from './Statistics';\r\nimport { FriendList } from './Friend-list';\r\nimport { TransactionHistory } from './Transaction-history';\r\n\r\nimport User from './data/user.json';\r\nimport statisticalData from './data/statistical-data.json';\r\nimport friends from './data/friends.json';\r\nimport transactions from './data/transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={User.name}\r\n        tag={User.tag}\r\n        location={User.location}\r\n        avatar={User.avatar}\r\n        stats={User.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}